import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Data Collection and Preprocessing
wine_data = pd.read_csv("winequalityN.csv")
# Data preprocessing (e.g., handling missing values, feature scaling, encoding categorical variables)

# Step 2: Data Exploration and Visualization
sns.countplot(data=wine_data, x='quality')
plt.show()

# Step 3: Feature Selection
# Select relevant features

# Step 4: Model Selection
X = wine_data.drop('quality', axis=1)
y = wine_data['quality']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestRegressor()
model.fit(X_train, y_train)

# Step 5: Model Training and Evaluation
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

# Step 6: Hyperparameter Tuning
# Fine-tune hyperparameters

# Step 7: Model Deployment
# Deploy the model for making predictions
